.\" View this file with
.\" groff -man -Tascii rdfind.1 |less
.\"
.\" Author Paul Dreik 2006
.\" see LICENSE for details.
.\" $Revision: 825 $
.\" $Id: rdfind.1 825 2013-06-19 18:50:29Z paul $
.TH rdfind "1" 1.3.4 "Jun 2013" rdfind
.SH NAME
rdfind \- finds duplicate files
.SH SYNOPSIS
.B rdfind [ options ] 
.I directory1 | file1
.B [
.I directory2 | file2
.B ] ...
.SH DESCRIPTION
.B rdfind
finds duplicate files across and/or within several directories. It calculates
checksum only if necessary.
rdfind runs in O(Nlog(N)) time with N being the number of files. 

If two (or more) equal files are found, the program decides which of
them is the original and the rest are considered duplicates. This
is done by ranking the files to each other and deciding which has the
highest rank. See section RANKING for details.

If you need better control over the ranking than given, you can use
some preprocessor which sorts the file names in desired order and then
run the program using xargs. See examples below for how to use find
and xargs in conjunction with rdfind.

To include files or directories that have names starting with -, use 
rdfind ./- to not confuse them with options.

.SH RANKING
Given two or more equal files, the one with the highest rank is
selected to be the original and the rest are duplicates. The rules of
ranking are given below, where the rules are executed from start until
an original has been found. Given two files A and B which have equal
content, the ranking is as follows: 

If A was found while scanning an input argument earlier than than B, A
is higher ranked.

If A was found at a depth lower than B, A is higher ranked (A closer
to the root)

If A was found earlier than B, A is higher ranked.

The last rule is needed when two files are found in the same directory
(obviously not given in separate arguments, otherwise the first rule applies)
and gives the same order between the files as the operating system
delivers the files while listing the directory. This is operating
system specific behaviour.

.SH OPTIONS
.B Searching options etc:
.IP "-ignoreempty true|false"
Ignore empty files. (default)
.IP "-followsymlinks true|false"
Follow symlinks. Default is false.
.IP "-removeidentinode true|false"
removes items found which have identical inode and device ID. Default
is true.
.IP "-checksum md5|sha1"
what type of checksum to be used: md5 or sha1. Default is md5.
.PP
.B Action options:
.IP "-makesymlinks true|false"
Replace duplicate files with symbolic links
.IP "-makehardlinks true|false"
Replace duplicate files with hard links
.IP "-makeresultsfile true|false"
Make a results file results.txt (default) in the current directory.
.IP "-outputname name"
Make the results file name to be "name" instead of the default results.txt.
.IP "-deleteduplicates true|false"
Delete (unlink) files.
.PP
.B General options:
.IP "-sleep Xms"
sleeps X milliseconds between reading each file, to reduce
load. Default is 0 (no sleep). Note that only a few values are
supported at present: 0,1-5,10,25,50,100 milliseconds. 
.IP "-n -dryrun"
displays what should have been done, dont actually delete or link anything.
.IP "-h, -help, --help"
displays brief help message.
.IP "-v, -version, --version"
displays version number.
.SH EXAMPLES
.TP
Search for duplicate files in home directory and a backup directory:
.B rdfind ~ /mnt/backup
.TP
Delete duplicate in a backup directory:
.B rdfind -deleteduplicates true /mnt/backup
.TP
Search for duplicate files in directories called foo:
.B find . -type d -name foo -print0 |xargs -0 rdfind
.SH FILES
.I results.txt
(the default name is results.txt and can be changed with option outputname,
see above) The results file results.txt will contain one row per duplicate file
found, along with a header row explaining the columns.
A text describes why the file is considered a duplicate:

DUPTYPE_UNKNOWN some internal error

DUPTYPE_FIRST_OCCURRENCE the file that is considered to be the original.

DUPTYPE_WITHIN_SAME_TREE files in the same tree (found when processing
the directory in the same input argument as the original)

DUPTYPE_OUTSIDE_TREE the file is found during processing another input
argument than the original. 
.SH ENVIRONMENT
.SH DIAGNOSTICS
.SH EXIT VALUES
0 on success, nonzero otherwise.
.SH BUGS/FEATURES
When specifying the same directory twice, it keeps the first
encountered as the most important (original), and the rest as
duplicates. This might not be what you want.

The symlink creates absolute links. This might not be what you
want. To create relative links instead, you may use the symlinks (2)
command, which is able to convert absolute links to relative links.

Older versions unfortunately contained a misspelling on the word
occurrence. This is now corrected (since 1.3), which might affect
user scripts parsing the output file written by rdfind.

There are lots of enhancements left to do. Please contribute!
.SH SECURITY CONSIDERATIONS
Avoid manipulating the directories while rdfind is reading.
rdfind is quite brittle in that case. Especially, when deleting
or making links, rdfind can be subject to a symlink attack.
Use with care!
.SH AUTHOR
Paul Dreik 2006, reachable at rdfind@pauldreik.se
Rdfind can be found at http://rdfind.pauldreik.se/

Do you find rdfind useful? Drop me a line! It is always fun to
hear from people who actually use it and what data collections
they run it on.
.SH THANKS
Several persons have helped with suggestions and improvements:
Niels MÃ¶ller, Carl Payne and Salvatore Ansani. Thanks also to you
who tested the program and sent me feedback.
.SH VERSION
1.3.4 (release date 2013-06-19)
svn id: $Id: rdfind.1 825 2013-06-19 18:50:29Z paul $
.SH COPYRIGHT
This program is distributed under GPLv2 or later, at your option.
.SH "SEE ALSO"
.BR md5sum (1),
.BR find (1),
.BR symlinks(2)
